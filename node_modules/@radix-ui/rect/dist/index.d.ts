type Measurable = {
<<<<<<< HEAD
    getBoundingClientRect(): DOMRect;
=======
    getBoundingClientRect(): ClientRect;
>>>>>>> 3b008e380491e6ba2d199016330fcd7fa128de4c
};
/**
 * Observes an element's rectangle on screen (getBoundingClientRect)
 * This is useful to track elements on the screen and attach other elements
 * that might be in different layers, etc.
 */
declare function observeElementRect(
/** The element whose rect to observe */
elementToObserve: Measurable, 
/** The callback which will be called when the rect changes */
callback: CallbackFn): () => void;
<<<<<<< HEAD
type CallbackFn = (rect: DOMRect) => void;
=======
type CallbackFn = (rect: ClientRect) => void;
>>>>>>> 3b008e380491e6ba2d199016330fcd7fa128de4c

export { type Measurable, observeElementRect };
