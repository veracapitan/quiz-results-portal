/**
 * @fileoverview Rule to flag when initializing octal literal
 * @author Ilya Volodin
 */

"use strict";

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

<<<<<<< HEAD
/** @type {import('../types').Rule.RuleModule} */
module.exports = {
	meta: {
		type: "suggestion",

		docs: {
			description: "Disallow octal literals",
			recommended: true,
			url: "https://eslint.org/docs/latest/rules/no-octal",
		},

		schema: [],

		messages: {
			noOctal: "Octal literals should not be used.",
		},
	},

	create(context) {
		return {
			Literal(node) {
				if (
					typeof node.value === "number" &&
					/^0[0-9]/u.test(node.raw)
				) {
					context.report({
						node,
						messageId: "noOctal",
					});
				}
			},
		};
	},
=======
/** @type {import('../shared/types').Rule} */
module.exports = {
    meta: {
        type: "suggestion",

        docs: {
            description: "Disallow octal literals",
            recommended: true,
            url: "https://eslint.org/docs/latest/rules/no-octal"
        },

        schema: [],

        messages: {
            noOctal: "Octal literals should not be used."
        }
    },

    create(context) {

        return {

            Literal(node) {
                if (typeof node.value === "number" && /^0[0-9]/u.test(node.raw)) {
                    context.report({
                        node,
                        messageId: "noOctal"
                    });
                }
            }
        };

    }
>>>>>>> 3b008e380491e6ba2d199016330fcd7fa128de4c
};
