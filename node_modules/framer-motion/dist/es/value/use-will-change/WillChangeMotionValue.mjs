<<<<<<< HEAD
import { MotionValue, transformProps, acceleratedValues } from 'motion-dom';
=======
import { MotionValue } from 'motion-dom';
import { addUniqueItem } from 'motion-utils';
import { getWillChangeName } from './get-will-change-name.mjs';
>>>>>>> 3b008e380491e6ba2d199016330fcd7fa128de4c

class WillChangeMotionValue extends MotionValue {
    constructor() {
        super(...arguments);
<<<<<<< HEAD
        this.isEnabled = false;
    }
    add(name) {
        if (transformProps.has(name) || acceleratedValues.has(name)) {
            this.isEnabled = true;
=======
        this.values = [];
    }
    add(name) {
        const styleName = getWillChangeName(name);
        if (styleName) {
            addUniqueItem(this.values, styleName);
>>>>>>> 3b008e380491e6ba2d199016330fcd7fa128de4c
            this.update();
        }
    }
    update() {
<<<<<<< HEAD
        this.set(this.isEnabled ? "transform" : "auto");
=======
        this.set(this.values.length ? this.values.join(", ") : "auto");
>>>>>>> 3b008e380491e6ba2d199016330fcd7fa128de4c
    }
}

export { WillChangeMotionValue };
